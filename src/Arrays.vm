function Arrays.new 0
push constant 2
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 1
push argument 0
call Array.new 1
pop this 0
push pointer 0
return
function Arrays.size 0
push argument 0
pop pointer 0
push this 1
return
function Arrays.add 0
push argument 0
pop pointer 0
push argument 1
push constant 0
lt
push argument 1
or
push this 1
push constant 1
sub
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push argument 2
push constant 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
return
label IF_FALSE1
push argument 1
push this 0
add
push argument 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Arrays.get 0
push argument 0
pop pointer 0
push argument 1
push constant 0
lt
push argument 1
or
push this 1
push constant 1
sub
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push argument 1
push this 0
add
pop pointer 1
push that 0
return
function Arrays.remove 0
push argument 0
pop pointer 0
push argument 1
push constant 0
lt
push argument 1
or
push this 1
push constant 1
sub
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push argument 1
push this 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Arrays.contains 1
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 1
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
push argument 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Arrays.max 2
push argument 0
pop pointer 0
push constant 0
push this 0
add
pop pointer 1
push that 0
pop local 0
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push this 1
lt
not
if-goto WHILE_END0
push local 1
push this 0
add
pop pointer 1
push that 0
push local 0
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
push this 0
add
pop pointer 1
push that 0
pop local 0
label IF_FALSE0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push local 0
return
function Arrays.min 2
push argument 0
pop pointer 0
push constant 0
push this 0
add
pop pointer 1
push that 0
pop local 0
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push this 1
lt
not
if-goto WHILE_END0
push local 1
push this 0
add
pop pointer 1
push that 0
push local 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
push this 0
add
pop pointer 1
push that 0
pop local 0
label IF_FALSE0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push local 0
return
